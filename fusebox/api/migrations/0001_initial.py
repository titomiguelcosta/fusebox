# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-02 05:09
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('popularity', models.IntegerField(default=0)),
                ('genres', models.CharField(blank=True, max_length=250)),
                ('spotify_id', models.CharField(blank=True, max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('value', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Played',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'Played',
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=250)),
                ('spotify_id', models.CharField(blank=True, max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistTracks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queued_on', models.DateTimeField()),
                ('dequeued_on', models.DateTimeField(null=True)),
                ('dequeued_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_tracks_dequeued_by', to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_tracks_playlist', to='api.Playlist')),
                ('queued_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_tracks_queued_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('category', models.CharField(default='like', max_length=250)),
                ('on', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('album', models.CharField(blank=True, max_length=250)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('spotify_id', models.CharField(blank=True, max_length=250)),
                ('popularity', models.IntegerField(default=0.0)),
                ('danceability', models.FloatField(default=0.0)),
                ('energy', models.FloatField(default=0.0)),
                ('loudness', models.FloatField(default=0.0)),
                ('speechiness', models.FloatField(default=0.0)),
                ('acousticness', models.FloatField(default=0.0)),
                ('instrumentalness', models.FloatField(default=0.0)),
                ('liveness', models.FloatField(default=0.0)),
                ('valence', models.FloatField(default=0.0)),
                ('tempo', models.FloatField(default=0.0)),
                ('duration_ms', models.FloatField(default=0.0)),
                ('populated', models.BooleanField(default=False)),
                ('artists', models.ManyToManyField(to='api.Artist')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slack_username', models.CharField(max_length=200)),
                ('notifications', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User profiles',
            },
        ),
        migrations.AddField(
            model_name='rate',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Track'),
        ),
        migrations.AddField(
            model_name='rate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='playlisttracks',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_tracks_track', to='api.Track'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(through='api.PlaylistTracks', to='api.Track'),
        ),
        migrations.AddField(
            model_name='played',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Track'),
        ),
    ]
